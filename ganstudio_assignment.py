# -*- coding: utf-8 -*-
"""GanStudio_Assignment.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zWOk95F3hJxtuweACDBUqRAO7BjMganL
"""

from google.colab import drive
drive.mount('/content/drive')

import csv
from collections import defaultdict
import pandas as pd

def process_trades(trades):
    opening_trades = defaultdict(list)
    closing_trades = []
    pnl_total = 0

    for trade in trades.itertuples(index=False):
        time, symbol, side, price, quantity = trade
        price = float(price)
        quantity = int(quantity)

        if side == 'B':
            opening_trades[symbol].append((time, quantity, price))
        elif side == 'S':
            while quantity > 0:
                if symbol in opening_trades and opening_trades[symbol]:
                    open_time, open_quantity, open_price = opening_trades[symbol][0]
                    paired_quantity = min(open_quantity, quantity)
                    pnl = paired_quantity * (price - open_price)
                    pnl_total += pnl

                    closing_trades.append({
                        'OPEN_TIME': open_time,
                        'CLOSE_TIME': time,
                        'SYMBOL': symbol,
                        'QUANTITY': paired_quantity,
                        'PNL': round(pnl, 2),
                        'OPEN_SIDE': 'B',
                        'CLOSE_SIDE': 'S',
                        'OPEN_PRICE': open_price,
                        'CLOSE_PRICE': price
                    })

                    if quantity < open_quantity:
                        opening_trades[symbol][0] = (open_time, open_quantity - quantity, open_price)
                        quantity = 0
                    else:
                        quantity -= open_quantity
                        opening_trades[symbol].pop(0)
                else:
                    # Short selling (no opening trade available)
                    opening_trades[symbol].append((time, -quantity, price))
                    break

    return closing_trades, round(pnl_total, 2)

chunk_size = 10000
closing_trades_list = []
pnl_total = 0

# Read and process the CSV file in chunks
for chunk in pd.read_csv('/content/drive/MyDrive/Colab Notebooks/trades.csv', chunksize=chunk_size):
    chunk.sort_values(by='TIME', inplace=True)
    closing_trades, pnl = process_trades(chunk)
    closing_trades_list.extend(closing_trades)
    pnl_total += pnl

output_columns = ['OPEN_TIME', 'CLOSE_TIME', 'SYMBOL', 'QUANTITY', 'PNL', 'OPEN_SIDE', 'CLOSE_SIDE', 'OPEN_PRICE', 'CLOSE_PRICE']
print(','.join(output_columns))

batch_size = 1000
for i in range(0, len(closing_trades_list), batch_size):
    batch = closing_trades_list[i:i + batch_size]
    for trade in batch:
        print(','.join(str(trade[col]) for col in output_columns))
    print(f"Batch {i // batch_size + 1} of {len(closing_trades_list) // batch_size}")

print(f"Cumulative Realized PNL: {pnl_total:.2f}")

